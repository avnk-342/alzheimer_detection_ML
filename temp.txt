// express/index.js
const express = require('express');
const axios = require('axios');
const multer = require('multer'); // To handle multipart/form-data
const FormData = require('form-data'); // To create a new form-data instance

const app = express();
const upload = multer({ storage: multer.memoryStorage() }); // Use memory storage for the file

app.post('/api/express/upload', upload.single('yourImageFieldName'), async (req, res) => {
    try {
        // 1. Get the URL for the FastAPI service from environment variables
        const fastApiUrl = process.env.FASTAPI_URL;
        if (!fastApiUrl) {
            throw new Error("FASTAPI_URL environment variable not set!");
        }

        // 2. Get the file buffer from the incoming request
        if (!req.file) {
            return res.status(400).send('No file uploaded.');
        }

        // 3. Create a new FormData object to forward the file
        const formData = new FormData();
        // The 'file' key must match what your FastAPI endpoint expects (`@File(...)`)
        formData.append('file', req.file.buffer, { filename: req.file.originalname });

        // 4. Make the server-to-server request to the FastAPI function
        const response = await axios.post(fastApiUrl, formData, {
            headers: {
                ...formData.getHeaders(), // Important for multipart/form-data
            },
        });

        // 5. Send the prediction from FastAPI back to the React frontend
        res.status(200).json(response.data);

    } catch (error) {
        console.error("Error forwarding to FastAPI:", error);
        res.status(500).json({ message: "Something went wrong." });
    }
});

module.exports = app;